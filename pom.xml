<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<name>EventDispatcher</name>
	<description>Project that offers a small library that allows to subscribe and fire events.</description>
	<url>https://github.com/FerMod/EventDispatcher</url>
	<inceptionYear>2019</inceptionYear>

	<groupId>com.fermod</groupId>
	<artifactId>event-dispatcher</artifactId>
	<version>0.1.5-beta.1</version>
	<packaging>jar</packaging>

	<developers>
		<developer>
			<id>FerMod</id>
			<name>Ferran Tudela</name>
			<email>tudelaigarcia@gmail.com</email>
			<url>https://github.com/FerMod</url>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>Europe/Madrid</timezone>
		</developer>
		<!-- 
		<developer>
			<id></id>
			<name></name>
			<email></email>
			<url></url>
			<roles>
				<role></role>
			</roles>
			<timezone></timezone>
		</developer>
		-->
	</developers>

	<contributors>
		<!--
		<contributor>
			<name></name>
			<email></email>
			<url></url>
			<roles>
				<role></role>
			</roles>
			<timezone></timezone>
		</contributor>
		-->
	</contributors>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>https://raw.githubusercontent.com/FerMod/EventDispatcher/master/LICENSE</url>
			<distribution>repo</distribution>
			<comments>A short, permissive software license</comments>
		</license>
	</licenses>

	<ciManagement>
		<system>TravisCI</system>
		<url>https://travis-ci.org/FerMod/EventDispatcher</url>
	</ciManagement>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>GitHub FerMod Maven Packages</name>
			<url>https://maven.pkg.github.com/FerMod</url>
		</repository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git://github.com/FerMod/EventDispatcher</connection>
		<developerConnection>scm:git:git://github.com/FerMod/EventDispatcher</developerConnection>
		<tag>master</tag>
		<url>https://github.com/FerMod/EventDispatcher</url>
	</scm>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/FerMod/EventDispatcher/issues</url>
	</issueManagement>

	<properties>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${project.build.sourceEncoding}</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>

		<!-- Dependencies Versions -->
		<junit.jupiter.version>5.4.1</junit.jupiter.version>
		<junit.platform.version>1.4.1</junit.platform.version>
		<apache.logging.log4j.version>2.11.2</apache.logging.log4j.version>

		<!-- Plugins Versions -->
		<maven.compiler.plugin.version>3.8.0</maven.compiler.plugin.version>
		<maven.surefire.plugin.version>3.0.0-M3</maven.surefire.plugin.version>
		<maven.site.plugin.version>3.7.1</maven.site.plugin.version>
		<maven.project.info.reports.plugin.version>3.0.0</maven.project.info.reports.plugin.version>
		<maven.jxr.plugin.version>3.0.0</maven.jxr.plugin.version>
		<maven.javadoc.plugin.version>3.1.0</maven.javadoc.plugin.version>
		<jacoco.maven.plugin.version>0.8.4</jacoco.maven.plugin.version>

	</properties>

	<dependencies>

		<!-- Junit 5 -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<version>${junit.platform.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Junit 5 experimental feature -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<version>${junit.jupiter.version}</version>
			<scope>test</scope>
		</dependency>

		<!-- Log4j2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${apache.logging.log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${apache.logging.log4j.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- Compiles the sources the project -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
			</plugin>

			<!-- Allows to run unit tests. Requires Surefire version 2.22.1 or higher -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run -->
					<argLine>${surefireArgLine}</argLine>
				</configuration>
			</plugin>

			<!-- Allows to run integration tests -->
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>

			<!-- Generates a site for the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>${maven.site.plugin.version}</version>
				<configuration>
					<outputDirectory>${basedir}/docs/site</outputDirectory>
				</configuration>
			</plugin>

			<!-- Generates Javadocs as standalone -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<outputDirectory>${basedir}/docs/site</outputDirectory>
					<nohelp>true</nohelp>
					<show>private</show>
				</configuration>
			</plugin>

			<!-- Generates code coverage analysis -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.maven.plugin.version}</version>
				<executions>

					<!--
					Prepares the property pointing to the JaCoCo runtime agent which 
					is passed as VM argument when Maven the Surefire plugin is executed
					-->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Set the path to the file which contains the execution data  -->
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
							<!-- Set the name of the property containing the settingsfor JaCoCo runtime agent -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>

					<!--
						Ensures that the code coverage report for unit tests is created after
						unit tests have been run
					-->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<!-- Sets the output directory for the code coverage report -->
							<outputDirectory>${project.build.directory}/coverage-reports</outputDirectory>
						</configuration>
					</execution>

					<execution>
						<id>acoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data -->
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
							<haltOnFailure>false</haltOnFailure>
							<rules>
								<rule>
									<element>CLASS</element>
									<excludes>
										<exclude>*Test</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.9</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>

				</executions>
			</plugin>

		</plugins>
	</build>

	<reporting>
		<plugins>

			<!-- Generates Javadocs as part of the site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven.javadoc.plugin.version}</version>
				<configuration>
					<show>public</show>
				</configuration>
			</plugin>

			<!-- Generates reports information about the project -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven.project.info.reports.plugin.version}</version>
			</plugin>

			<!-- Generates JUnit reports as part of the site generation -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>${maven.surefire.plugin.version}</version>
			</plugin>

			<!-- Allows cross reference source code  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven.jxr.plugin.version}</version>
			</plugin>

			<!-- Generates code ccode coverage report -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<inherited>true</inherited>
						<reports>
							<report>report</report>
						</reports>
						<configuration>
							<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
						</configuration>
					</reportSet>
				</reportSets>
			</plugin>

		</plugins>
	</reporting>

</project>
